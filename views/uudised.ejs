<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/index.css">
    <link rel="stylesheet" href="../css/uudised.css">
    <link rel="stylesheet" href="../css/skeletonItems.css">
    <title>Uudised ðŸ“° | VOCO Liikumine</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.js"></script>

</head>
<body>
<header>
    <div class="header-links">
        <a href="https://www.facebook.com/tartuvoco/">
            <i class="fa-brands fa-square-facebook fa-xl" style="color: #000000;"></i>
        </a>
        <a href="https://www.tiktok.com/@tartuvoco?lang=en">
            <i class="fa-brands fa-tiktok fa-xl" style="color: #000000;"></i>
        </a>
        <a href="https://www.instagram.com/tartuvoco/?hl=en">
            <i class="fa-brands fa-instagram fa-xl" style="color: #000000;"></i>
        </a>
    </div>
    <div class="header-search">
        <input type="text" id="searchInput" placeholder="Otsi...">
        <button type="button" id="searchButton">
            <i class="fa-solid fa-search fa-lg" style="color: #000000;"></i>
        </button>
        <a id="siseneButton" class="sisene" href="/sisene">Sisene</a>
    </div>
    <script>
        document.getElementById("searchButton").addEventListener("click", function () {
            sendData();
        });

        document.getElementById("searchInput").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                sendData();
            }
        });

        function sendData() {
            var userInput = document.getElementById("searchInput").value.trim();
            if (userInput.length > 3) {
                sendDataToServer(userInput);
            } else {
                alert("Please enter at least 4 characters before searching.");
            }
        }

        function sendDataToServer(input) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/search", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        var response = JSON.parse(xhr.responseText);
                        if (response.success) {
                            var url = response.url;
                            var data = response.data; // Extract the data from the response
                            window.location.href = `${url}?data=${JSON.stringify(data)}`; // Pass data as query parameter
                        } else {
                            alert("Search failed. Please try again later.");
                        }
                    } else {
                        alert("Error: " + xhr.statusText);
                    }
                }
            };
            var data = JSON.stringify({ query: input });
            xhr.send(data);
        }
    </script>
</header>
<nav>
    <a href="/" class="nav-logo">
        <img style="height: 80px" src="/logos/voco-logo-04-3.png">

    </a>
    <div class="nav-links">
        <a href="artiklid">Artiklid</a>
        <a style="color: #2980b9" href="uudised">Uudised</a>
        <a href="foorum">Foorum</a>
        <a href="treeningud">Treeningud</a>
        <a href="galerii">Galerii</a>
        <a href="kontakt">Kontakt</a>
    </div>
</nav>

<section class="uudised">
    <div class="section-nav">
        <div class="path">
            <p><a href="/">Avaleht</a> > <span>Uudised</span></p>
        </div>
        <h1>Uudised</h1>

        <% if (userRole === 2 || userRole === 3) { %>
            <section class="hold-create-news">
                <h2>Lisa uus uudis</h2>

                <div class="new-news">
                    <form id="createNews" onsubmit="submitForm(event)">
                        <input type="text" name="newNewsHeader" id="newNewsHeader" placeholder="Uue uudise pealkiri">
                        <input type="hidden" id="summernoteContent" name="summernoteContent">
                        <button type="submit"><i class="fa-solid fa-plus fa-lg"></i></button>
                        <div class="error" id="error-message-container">
                            <!-- Error message will be dynamically inserted here -->
                        </div>
                    </form>
                </div>

                <div id="summernote"></div>
                <script>
                    $('#summernote').summernote({
                        placeholder: 'uudise sisu...',
                        tabsize: 2,
                        height: 200,
                        toolbar: [
                            ['style', ['style']],
                            ['font', ['bold', 'underline', 'clear']],
                            ['color', ['color']],
                            ['para', ['ul', 'ol', 'paragraph']],
                            ['table', ['table']],
                            ['insert', ['link', 'picture']],
                            ['view', ['help']]
                        ],
                        callbacks: {
                            onPaste: function (e) {
                                // Prevent the default paste behavior
                                e.preventDefault();

                                // Get the pasted content
                                var pastedContent = (e.originalEvent.clipboardData || window.clipboardData).getData('text/plain');

                                // Remove all HTML tags and extra spaces
                                pastedContent = pastedContent.replace(/<[^>]+>/g, ''); // Remove HTML tags
                                pastedContent = pastedContent.replace(/\s+/g, ' '); // Remove extra spaces

                                // Insert the plain text into the editor
                                document.execCommand('insertText', false, pastedContent.trim());
                            }
                        }

                    });
                </script>

            </section>
        <% } %>


        <section class="hold-filter">
            <button class="order-btn" id="orderButton" onclick="toggleOrder()">Vanimad <i class="fa-solid fa-arrow-down fa-sm"></i> </button>
            <select id="yearDropdown">
                <option value="" selected>Vali aasta</option>
            </select>
            <div class="filter-search">
                <input type="text" id="filterSearchInput" placeholder="Otsi uudiste seast...">
                <button type="submit" onclick="deleteInput()">
                    <i class="fa-regular fa-circle-xmark fa-lg"></i>
                </button>
            </div>
        </section>

    </div>
    <div class="first-news" id="newestNews">
    </div>
    <main id="news" class="news-content">
    </main>
</section>




<div class="mapBanner">
    <a href="https://www.google.com/maps?ll=58.349455,26.714113&amp;z=15&amp;t=m&amp;hl=en-US&amp;gl=EG&amp;mapclient=embed&amp;q=Kopli+1+50115+Tartu+Estonia" target="_blank" class="mapBanner_col" style="background-image: url('https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/map_1.jpg')">
        Kopli 1
    </a>
    <a href="https://www.google.com/maps/place/P%C3%B5llu+11,+50303+Tartu,+Estonia/@58.3994611,26.7119631,17.25z/data=!4m13!1m7!3m6!1s0x46eb36f49f59f7b1:0xc60a936ef314737f!2sP%C3%B5llu+11,+50303+Tartu,+Estonia" target="_blank" class="mapBanner_col" style="background-image: url('https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/map_2.jpg')">
        PÃµllu 11
    </a>
</div>

<footer class="footer">
    <div class="container container-footer">
        <div class="footer_content">
            <div class="footer_logoCol">
                <a href="https://liikumine.voco.ee/" class="footer_logo">
                    <img src="https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/VOCO.svg"
                         alt="VOCO Liikumine" class="footer_logoImg">
                </a>
            </div>
            <div class="footer_mainCol">
                <div class="footer_grid">
                    <div class="footer_col">
                        <h3 class="footer_title">
                            Kontakt
                        </h3>
                        <div class="footer_text">
                            <p><a href="mailto:info@voco.ee">info@voco.ee</a></p>
                            <p>7 361 810</p>

                        </div>
                    </div>
                    <div class="footer_col">
                        <h3 class="footer_title">
                            VOCO
                        </h3>
                        <div class="footer_text">
                            <p>Kopli 1</p>
                            <p>Tartu 50115 Eesti</p>

                        </div>
                    </div>
                    <div class="footer_col">
                        <h3 class="footer_title">
                            Privaatsustingimused
                        </h3>
                        <div class="footer_text">
                            <p><a href="#">Andmekaitse</a></p>
                            <p><a href="#">KÃ¼psised</a></p>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="footer_bottom">
        Â© Tartu rakenduslik kolledÅ¾ 2024
    </div>
</footer>

</body>
<% if (userRole === 2 || userRole === 3) { %>
    <script>
        function submitForm(event) {
            event.preventDefault(); // Prevent default form submission

            // Get Summernote content
            var summernoteContent = $('#summernote').summernote('code');
            // Set Summernote content to the hidden input field
            document.getElementById('summernoteContent').value = summernoteContent;

            // Get session data from sessionStorage
            var sessionToken = sessionStorage.getItem('sessionToken');
            var userId = sessionStorage.getItem('userId');
            var email = sessionStorage.getItem('email');

            // Create an object to hold form data
            var formData = {
                newNewsHeader: document.getElementById('newNewsHeader').value,
                summernoteContent: summernoteContent,
                sessionToken: sessionToken,
                userId: userId,
                email: email
            };

            // Check if newNewsHeader or summernoteContent is empty
            if (!formData.newNewsHeader || !formData.summernoteContent) {
                console.error('New news header or summernote content is empty');
                document.getElementById('error-message-container').innerText = 'Uue uudise pealkiri vÃµi sisu ei tohi olla tÃ¼hi!';
                return;
            }

// Send form data to server
            fetch('/submit-news', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => {
                    if (!response.ok) {

                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        console.log('Data submitted successfully:', data);
                        alert('Uus uudis lisatud!');
                        location.reload();
                        // Optionally, you can redirect the user or perform any other action upon successful submission
                    } else {
                        // Display error message if submission failed
                        console.error('Error submitting data:', data.message);
                        document.getElementById('error-message-container').innerText = data.message;
                    }
                })
                .catch(error => {
                    console.error('Error submitting data:', error);
                    // Display error message if submission failed
                    document.getElementById('error-message-container').innerText = 'Network error: ' + error.message;
                });

        }

    </script>

<% } %>


<script>
    function filterNewsByYear() {
        const selectedYear = document.getElementById('yearDropdown').value;

        const newsPreviews = document.querySelectorAll('.news-preview');
        const newsLine = document.querySelector('.line');

        newsPreviews.forEach(newsPreview => {
            const newsDateElement = newsPreview.querySelector('.news-date');
            if (selectedYear === "" || (newsDateElement && newsDateElement.textContent.includes(selectedYear))) {
                newsPreview.style.display = '';
            } else {
                newsPreview.style.display = 'none';
            }
        });
    }
    document.getElementById('yearDropdown').addEventListener('change', filterNewsByYear);

</script>
<script>

    let isOldest = true;

    function toggleOrder() {
        if (isOldest) {
            orderNewsByLatest();
            document.getElementById('orderButton').innerHTML = 'Uusimad <i class="fa-solid fa-arrow-up fa-sm"></i>';
        } else {
            orderNewsByOldest();
            document.getElementById('orderButton').innerHTML = 'Vanimad <i class="fa-solid fa-arrow-down fa-sm"></i>';
        }
        isOldest = !isOldest;
    }

    function orderNewsByLatest() {
        const news = Array.from(document.querySelectorAll('.news-preview'));
        const newsContainer = document.getElementById('news');
        const newestNews = newsContainer.firstChild; // Get the newest news element

        news.shift(); // Remove the newest news from the array

        news.reverse(); // Reverse the order of remaining news articles

        news.forEach(news => newsContainer.appendChild(news));

        // Move the newest news back to the top
        newsContainer.prepend(newestNews);

        // Update button text
        document.getElementById('orderButton').innerHTML = 'Vanimad <i class="fa-solid fa-arrow-down fa-sm"></i>';
    }

    function orderNewsByOldest() {
        const news = Array.from(document.querySelectorAll('.news-preview'));
        const newsContainer = document.getElementById('news');
        const newestNews = newsContainer.firstChild; // Get the newest news element

        news.shift(); // Remove the newest news from the array

        news.reverse(); // Reverse the order of remaining news articles

        news.forEach(news => newsContainer.appendChild(news));

        // Move the newest news back to the top
        newsContainer.prepend(newestNews);

        // Update button text
        document.getElementById('orderButton').innerHTML = 'Uusimad <i class="fa-solid fa-arrow-up fa-sm"></i>';
    }


</script>


<script>
    // Function to show skeleton loader for news
    function showNewsSkeletonLoader() {
        const newsContainer = document.getElementById('news');
        newsContainer.innerHTML = ''; // Clear existing content

        // Create skeleton elements for news
        for (let i = 0; i < 4; i++) {
            const newsSkeleton = document.createElement('div');
            newsSkeleton.classList.add('news-skeleton');

            const authorSkeleton = document.createElement('div');
            authorSkeleton.classList.add('author-skeleton');

            const dateSkeleton = document.createElement('div');
            dateSkeleton.classList.add('date-skeleton');

            const headerSkeleton = document.createElement('div');
            headerSkeleton.classList.add('header-skeleton');

            const contentSkeleton = document.createElement('div');
            contentSkeleton.classList.add('content-skeleton');

            newsSkeleton.appendChild(authorSkeleton);
            newsSkeleton.appendChild(dateSkeleton);
            newsSkeleton.appendChild(headerSkeleton);
            newsSkeleton.appendChild(contentSkeleton);

            newsContainer.appendChild(newsSkeleton);
        }
    }

    // Call function to show skeleton loader for news
    showNewsSkeletonLoader();

    function fetchNews() {
        fetch('/get-news')
            .then(response => response.json())
            .then(data => {
                // Clear existing news
                document.getElementById('news').innerHTML = '';

                // Get the newest news article
                const newestNews = data[0];

                // Create a div element to hold the newest news
                const newestNewsDiv = document.createElement('div');
                newestNewsDiv.classList.add('news-preview');
                newestNewsDiv.innerHTML = `
                <h4 class="uusim-uudis">Uusim uudis</h4>
                <p class="news-author">Autor: ${newestNews.newsAuthor}</p>
                <p class="news-date">${newestNews.newsDate}</p>
                <h2>${newestNews.newsHeader}</h2>
                <div>${newestNews.summernoteContent}</div>
                <a href="${newestNews.url}">Loe rohkem â†’</a>
            `;

                // Append the newest news to the "newestNews" div
                document.getElementById('newestNews').appendChild(newestNewsDiv);

                // Get the dropdown element
                const yearDropdown = document.getElementById('yearDropdown');

                // Array to hold unique years
                const uniqueYears = [];

                // Check if there are more than 1 news articles
                if (data.length > 1) {
                    const newestNewsDivLine = document.createElement('div');
                    newestNewsDivLine.classList.add('line');
                    newestNewsDivLine.innerHTML = `<p class="line-text">Varasemad</p>`;
                    document.getElementById('newestNews').appendChild(newestNewsDivLine);
                }

                // Loop through fetched articles (excluding the newest one) and append them to the main element
                for (let i = 1; i < data.length; i++) {
                    const news = data[i];
                    const newsDiv = document.createElement('div');
                    newsDiv.classList.add('news-preview');
                    newsDiv.innerHTML = `
                    <p class="news-author">Autor: ${news.newsAuthor}</p>
                    <p class="news-date">${news.newsDate}</p>
                    <h2>${news.newsHeader}</h2>
                    <div>${news.summernoteContent}</div>
                    <a href="${news.url}">Loe rohkem â†’</a>
                `;

                    // Find all images inside the div
                    const imgElements = newsDiv.querySelectorAll('img');

                    // Loop through imgElements and set width to "200px"
                    imgElements.forEach(imgElement => {
                        imgElement.style.width = '200px';
                    });

                    // If an image is found, set it as the background of the newsDiv
                    const firstImgElement = imgElements[0]; // Assuming we want to set only the first image as background
                    if (firstImgElement) {
                        newsDiv.style.backgroundImage = `url('${firstImgElement.src}')`;
                        newsDiv.style.backgroundSize = 'cover';
                        newsDiv.style.backgroundPosition = 'center';
                        newsDiv.style.backgroundRepeat = 'no-repeat';
                        newsDiv.style.backgroundBlendMode = 'overlay';
                    }

                    document.getElementById('news').appendChild(newsDiv);

                    // Extract year from article date (assuming articleDate format is 'DD-MM-YYYY')
                    const year = news.newsDate.split('-')[2];

                    // Add year to uniqueYears if it's not already there
                    if (!uniqueYears.includes(year)) {
                        uniqueYears.push(year);
                    }
                }

                // Populate the dropdown with unique years
                uniqueYears.forEach(year => {
                    const option = document.createElement('option');
                    option.value = year;
                    option.textContent = year;
                    yearDropdown.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error fetching articles:', error);
                // Handle errors here
            });
    }

    // Call fetchNews function when the page loads
    window.onload = fetchNews;

</script>



<script>
    function searchNews() {
        const searchInput = document.getElementById('filterSearchInput').value.trim().toLowerCase();
        const newsPreviews = document.querySelectorAll('.news-preview');

        newsPreviews.forEach(newsPreview => {
            const newsText = newsPreview.textContent.toLowerCase().trim();
            const h2Element = newsPreview.querySelector('h2');
            const summernoteContentElement = newsPreview.querySelector('.summernote-content');
            const authorElement = newsPreview.querySelector('.news-author');
            const newsDateElement = newsPreview.querySelector('.news-date');

            if (newsText.includes(searchInput) ||
                (h2Element && h2Element.textContent.toLowerCase().includes(searchInput)) ||
                (authorElement && authorElement.textContent.toLowerCase().includes(searchInput)) ||
                (newsDateElement && newsDateElement.textContent.toLowerCase().includes(searchInput)) ||
                (summernoteContentElement && summernoteContentElement.textContent.toLowerCase().includes(searchInput))) {
                newsPreview.style.display = '';
            } else {
                newsPreview.style.display = 'none';
            }
        });
    }

    function deleteInput() {
        document.getElementById('filterSearchInput').value = '';
        searchNews(); // Call searchNews to update display after clearing input
    }

    document.getElementById('filterSearchInput').addEventListener('input', searchNews);

</script>



<script>
    // checkLogin.js

    document.addEventListener("DOMContentLoaded", function () {
        const siseneButton = document.getElementById('siseneButton');

        // Check if the user is logged in by making a request to the server
        fetch('/test')
            .then(response => response.json())
            .then(data => {
                const isLoggedIn = data.session && data.session.user !== undefined && data.session.user !== null;

                // Update the button text based on the user's login status
                siseneButton.innerText = isLoggedIn ? 'VÃ¤lju' : 'Sisene';

                // Add a click event listener to the button
                siseneButton.addEventListener('click', function () {
                    if (isLoggedIn) {
                        // If logged in, make a request to the server to log out
                        fetch('/logout')
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // If logout successful, reload the page to reflect the changes
                                    location.reload();
                                    // delete all sessionStorage
                                    sessionStorage.clear();
                                } else {
                                    console.error('Error logging out:', data.message);
                                }
                            })
                            .catch(error => console.error('Error logging out:', error));
                    } else {
                        // Handle the logic for navigating to the login page or any other actions
                        // Redirect to the login page, for example:
                        sessionStorage.clear();
                        window.location.href = '/sisene';
                    }
                });
            })
            .catch(error => console.error('Error checking login status:', error));
    });

</script>

</html>
