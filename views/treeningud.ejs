<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/index.css">
    <link rel="stylesheet" href="../css/treeningud.css">
    <title>Treeningud üèÉ‚Äç‚ôÄÔ∏è | VOCO Liikumine</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                editable: false,
                height: 500,
                allDaySlot: false,
                eventClassNames: 'trenni-hover',
                firstDay: 1,
                slotMinTime: "08:00:00",
                slotMaxTime: "21:30:00",
                slotDuration: "00:15:00",
                slotLabelFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    omitZeroMinute: false
                },
                aspectRatio: 0.5,
                contentHeight: 500,
                expandRows: true,
                handleWindowResize: true,
                eventRender: function (event, element, view) {
                    element.find('.fc-title').append('<div class="hr-line-solid-no-margin"></div><span style="font-size: 10px">' + event.description + '</span></div>');
                },
            });

            calendar.setOption('locale', 'et');

            // Fetch data from the endpoint
            fetch('/fetch-trennid', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    data.forEach(event => {
                        // Convert days to numbers
                        const days = event.trenni_toimumise_p√§ev.split(',');
                        const daysInNumbers = days.map(day => {
                            switch(day.trim()) {
                                case 'Monday':
                                    return 1;
                                case 'Tuesday':
                                    return 2;
                                case 'Wednesday':
                                    return 3;
                                case 'Thursday':
                                    return 4;
                                case 'Friday':
                                    return 5;
                                case 'Saturday':
                                    return 6;
                                case 'Sunday':
                                    return 7;
                                default:
                                    return -1; // Invalid day
                            }
                        });

                        // Create FullCalendar events
                        daysInNumbers.forEach(day => {
                            const startDateTime = `${event.trenni_toimumise_p√§ev.substring(0, 10)}T${event.trenni_toimumise_algusaeg}:00`;
                            const endDateTime = `${event.trenni_toimumise_p√§ev.substring(0, 10)}T${event.trenni_toimumise_l√µppaeg}:00`;
                            calendar.addEvent({
                                title: event.trenni_nimi,
                                start: startDateTime,
                                end: endDateTime,
                                daysOfWeek: [day],
                                startTime: event.trenni_toimumise_algusaeg,
                                endTime: event.trenni_toimumise_l√µppaeg,
                                color: event.trenni_v√§rv,
                                description: event.trenni_selgitus,
                                location: event.asukoht,
                            });
                        });
                    });
                    calendar.render();
                })
                .catch(error => console.error('Error fetching data:', error));
        });
    </script>



</head>
<body>
<header>
    <div class="header-links">
        <a href="https://www.facebook.com/tartuvoco/">
            <i class="fa-brands fa-square-facebook fa-xl" style="color: #000000;"></i>
        </a>
        <a href="https://www.tiktok.com/@tartuvoco?lang=en">
            <i class="fa-brands fa-tiktok fa-xl" style="color: #000000;"></i>
        </a>
        <a href="https://www.instagram.com/tartuvoco/?hl=en">
            <i class="fa-brands fa-instagram fa-xl" style="color: #000000;"></i>
        </a>
    </div>
    <div class="header-search">
        <input type="text" id="searchInput" placeholder="Otsi...">
        <button type="button" id="searchButton">
            <i class="fa-solid fa-search fa-lg" style="color: #000000;"></i>
        </button>
        <a id="siseneButton" class="sisene" href="/sisene">Sisene</a>
    </div>
    <script>
        document.getElementById("searchButton").addEventListener("click", function () {
            sendData();
        });

        document.getElementById("searchInput").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                sendData();
            }
        });

        function sendData() {
            var userInput = document.getElementById("searchInput").value.trim();
            if (userInput.length > 3) {
                sendDataToServer(userInput);
            } else {
                alert("Please enter at least 4 characters before searching.");
            }
        }

        function sendDataToServer(input) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/search", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        var response = JSON.parse(xhr.responseText);
                        if (response.success) {
                            var url = response.url;
                            var data = response.data; // Extract the data from the response
                            window.location.href = `${url}?data=${JSON.stringify(data)}`; // Pass data as query parameter
                        } else {
                            alert("Search failed. Please try again later.");
                        }
                    } else {
                        alert("Error: " + xhr.statusText);
                    }
                }
            };
            var data = JSON.stringify({ query: input });
            xhr.send(data);
        }
    </script>
</header>
<nav>
    <a href="/" class="nav-logo">
        <img style="height: 80px" src="/logos/voco-logo-04-3.png">

    </a>
    <div class="nav-links">
        <a href="artiklid">Artiklid</a>
        <a href="uudised">Uudised</a>
        <a href="foorum">Foorum</a>
        <a style="color: #2980b9" href="treeningud">Treeningud</a>
        <a href="galerii">Galerii</a>
    </div>
</nav>

<section class="treening">
    <div class="section-nav">
        <div class="path">
            <p><a href="/">Avaleht</a> > <span>treeningud</span></p>
        </div>
        <h1>Treeningud</h1>

    </div>
    <div id="calendar"></div>
    <% if (userRole === 2 || userRole === 3) { %>

    <form id="trenniForm">
        <h2>Lisa trenn</h2>
        <div class="form-group">
            <label class="nimi" for="eventTitle">Trenni nimi:</label>
            <input type="text" id="eventTitle" class="form-control" placeholder="Korvpall" required>
        </div>
        <div>
            <label class="nimi" for="eventDescription">Trenni kirjeldus:</label>
            <textarea id="eventDescription" class="form-control" placeholder="M√§ngime korvpalli"  required></textarea>
        </div>
        <div class="form-group weekDays" >
            <label class="nimi">Mis p√§evadel v√µiks toimuda:</label><br>
            <input type="checkbox" id="monday" name="day" value="Monday">
            <label for="monday">Esmasp√§ev</label><br>
            <input type="checkbox" id="tuesday" name="day" value="Tuesday">
            <label for="tuesday">Teisip√§ev</label><br>
            <input type="checkbox" id="wednesday" name="day" value="Wednesday">
            <label for="wednesday">Kolmap√§ev</label><br>
            <input type="checkbox" id="thursday" name="day" value="Thursday">
            <label for="thursday">Neljap√§ev</label><br>
            <input type="checkbox" id="friday" name="day" value="Friday">
            <label for="friday">Reede</label><br>
            <input type="checkbox" id="saturday" name="day" value="Saturday">
            <label for="saturday">Laup√§ev</label><br>
            <input type="checkbox" id="sunday" name="day" value="Sunday">
            <label for="sunday">P√ºhap√§ev</label><br>
        </div>

        <div class="form-group">
            <label class="nimi" for="eventStartTime">Trenni algusaeg:</label>
            <input type="time" id="eventStartTime" class="form-control" required>
        </div>
        <div class="form-group">
            <label class="nimi" for="eventEndTime">Trenni l√µpuaeg:</label>
            <input type="time" id="eventEndTime" class="form-control" required>
        </div>
        <div>
            <label class="nimi">Trenni asukoht:</label><br>
            <input type="radio" id="option1" name="location" value="kopli" class="form-control" required>
            <label for="option1">Kopli 1a</label><br>
            <input type="radio" id="option2" name="location" value="p√µllu" class="form-control" required>
            <label for="option2">P√µllu 11</label><br>
        </div>

        <!-- Separate form groups for Kopli and P√µllu room selection -->
        <div id="kopliRoomGroup" style="display: none;">
            <div class="form-group">
                <label class="nimi">Kopli Trenni asukoht:</label><br>
                <select id="kopliRoomSelection" class="form-control" required>
                    <option value="A032a - Kopli j√µusaal">A032a - Kopli j√µusaal</option>
                    <option value="A032b - Kopli Aeroobikasaal">A032b - Kopli Aeroobikasaal</option>
                    <option value="A160A/B - Kopli spordisaal">A160A/B - Kopli spordisaal</option>
                </select>
            </div>
        </div>

        <div id="p√µlluRoomGroup" style="display: none;">
            <div class="form-group">
                <label class="nimi">P√µllu Trenni asukoht:</label><br>
                <select id="p√µlluRoomSelection" class="form-control" required>
                    <option value="A121 - P√µllu spordisaal">A121 - P√µllu spordisaal</option>
                    <option value="A227 - P√µllu spordisaal">A227 - P√µllu spordisaal</option>
                </select>
            </div>
        </div>
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                var kopliRoomGroup = document.getElementById("kopliRoomGroup");
                var p√µlluRoomGroup = document.getElementById("p√µlluRoomGroup");
                var kopliRadio = document.getElementById("option1");
                var p√µlluRadio = document.getElementById("option2");

                // Function to show/hide room selection based on radio button selection
                function toggleRoomSelection() {
                    if (kopliRadio.checked) {
                        kopliRoomGroup.style.display = "block";
                        p√µlluRoomGroup.style.display = "none";
                    } else if (p√µlluRadio.checked) {
                        kopliRoomGroup.style.display = "none";
                        p√µlluRoomGroup.style.display = "block";
                    } else {
                        kopliRoomGroup.style.display = "none";
                        p√µlluRoomGroup.style.display = "none";
                    }
                }

                // Event listener for radio button change
                kopliRadio.addEventListener("change", toggleRoomSelection);
                p√µlluRadio.addEventListener("change", toggleRoomSelection);
            });
        </script>

        <div class="form-group">
            <label class="nimi" for="eventColor">Trenni v√§rv:</label><br>
            <select id="eventColor" class="form-control" required>
                <option value="#ff4040" style="background-color:#ff4040;">Punane</option>
                <option value="#70ff70" style="background-color:#70ff70;">Roheline</option>
                <option value="#2980b9" style="background-color:#2980b9;">Sinine</option>
                <option value="#ffd629" style="background-color:#ffd629;">Kollane</option>
                <option value="#ff29db" style="background-color:#ff29db;">Lilla</option>
                <option value="#afafaf" style="background-color:#afafaf;">Hall</option>
                <option value="#228B22" style="background-color:#228B22;">Tumeroheline</option>
                <option value="#FFC0CB" style="background-color:#FFC0CB;">Roosa</option>
                <option value="#FFA500" style="background-color:#FFA500;">Oran≈æ</option>
            </select>
        </div>

        <button type="button" id="addEventButton">Lisa trenn</button>
    </form>

    <% } %>

    <div class="search-trenn">
    </div>
    <main class="training-content">
    </main>
</section>





<div class="mapBanner">
    <a href="https://www.google.com/maps?ll=58.349455,26.714113&amp;z=15&amp;t=m&amp;hl=en-US&amp;gl=EG&amp;mapclient=embed&amp;q=Kopli+1+50115+Tartu+Estonia" target="_blank" class="mapBanner_col" style="background-image: url('https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/map_1.jpg')">
        Kopli 1
    </a>
    <a href="https://www.google.com/maps/place/P%C3%B5llu+11,+50303+Tartu,+Estonia/@58.3994611,26.7119631,17.25z/data=!4m13!1m7!3m6!1s0x46eb36f49f59f7b1:0xc60a936ef314737f!2sP%C3%B5llu+11,+50303+Tartu,+Estonia" target="_blank" class="mapBanner_col" style="background-image: url('https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/map_2.jpg')">
        P√µllu 11
    </a>
</div>

<footer class="footer">
    <div class="container container-footer">
        <div class="footer_content">
            <div class="footer_logoCol">
                <a href="https://liikumine.voco.ee/" class="footer_logo">
                    <img src="https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/VOCO.svg"
                         alt="VOCO Liikumine" class="footer_logoImg">
                </a>
            </div>
            <div class="footer_mainCol">
                <div class="footer_grid">
                    <div class="footer_col">
                        <h3 class="footer_title">
                            Kontakt
                        </h3>
                        <div class="footer_text">
                            <p><a href="mailto:info@voco.ee">info@voco.ee</a></p>
                            <p>7 361 810</p>

                        </div>
                    </div>
                    <div class="footer_col">
                        <h3 class="footer_title">
                            VOCO
                        </h3>
                        <div class="footer_text">
                            <p>Kopli 1</p>
                            <p>Tartu 50115 Eesti</p>

                        </div>
                    </div>
                    <div class="footer_col">
                        <h3 class="footer_title">
                            Privaatsustingimused
                        </h3>
                        <div class="footer_text">
                            <p><a href="#">Andmekaitse</a></p>
                            <p><a href="#">K√ºpsised</a></p>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="footer_bottom">
        ¬© Tartu rakenduslik kolled≈æ 2024
    </div>
</footer>

</body>

<script>
    // checkLogin.js

    document.addEventListener("DOMContentLoaded", function () {
        const siseneButton = document.getElementById('siseneButton');

        // Check if the user is logged in by making a request to the server
        fetch('/test')
            .then(response => response.json())
            .then(data => {
                const isLoggedIn = data.session && data.session.user !== undefined && data.session.user !== null;

                // Update the button text based on the user's login status
                siseneButton.innerText = isLoggedIn ? 'V√§lju' : 'Sisene';

                // Add a click event listener to the button
                siseneButton.addEventListener('click', function () {
                    if (isLoggedIn) {
                        // If logged in, make a request to the server to log out
                        fetch('/logout')
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // If logout successful, reload the page to reflect the changes
                                    location.reload();
                                    // delete all sessionStorage
                                    sessionStorage.clear();
                                } else {
                                    console.error('Error logging out:', data.message);
                                }
                            })
                            .catch(error => console.error('Error logging out:', error));
                    } else {
                        // Handle the logic for navigating to the login page or any other actions
                        // Redirect to the login page, for example:
                        localStorage.clear();
                        window.location.href = '/sisene';
                    }
                });
            })
            .catch(error => console.error('Error checking login status:', error));
    });

</script>

<% if (userRole === 2 || userRole === 3) { %>

<script>
    document.getElementById('addEventButton').addEventListener('click', function () {
        // Retrieve user data from sessionStorage
        var email = sessionStorage.getItem('email');
        var userId = sessionStorage.getItem('userId');
        var sessionToken = sessionStorage.getItem('sessionToken');

        // Check if user data exists
        if (!email || !userId || !sessionToken) {
            console.error('User data not found in sessionStorage');
            return;
        }

        // Prepare form data
        var formData = {
            eventTitle: document.getElementById('eventTitle').value,
            eventDescription: document.getElementById('eventDescription').value,
            days: [],
            eventStartTime: document.getElementById('eventStartTime').value,
            eventEndTime: document.getElementById('eventEndTime').value,
            location: document.querySelector('input[name="location"]:checked').value,
            eventColor: document.getElementById('eventColor').value,
            eventRoom: document.getElementById('kopliRoomSelection') ? document.getElementById('p√µlluRoomSelection').value : null,
            email: email,
            userId: userId,
            sessionToken: sessionToken
        };

        // Collect selected days
        var daysCheckboxes = document.querySelectorAll('input[name="day"]:checked');
        daysCheckboxes.forEach(function (checkbox) {
            formData.days.push(checkbox.value);
        });

        // Send form data to server
        fetch('/submit-trennid', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);
                // Optionally, do something after successful submission
            })
            .catch(error => {
                console.error('Error:', error);
                // Optionally, handle errors here
            });
    });
</script>

<% } %>


</html>
