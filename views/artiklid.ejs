<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/index.css">
    <link rel="stylesheet" href="../css/artiklid.css">
    <link rel="stylesheet" href="../css/skeletonItems.css">
    <title>Artiklid ðŸ“‘ | VOCO Liikumine</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.js"></script>

</head>
<body>
<header>
    <div class="header-links">
        <a href="https://www.facebook.com/tartuvoco/">
            <i class="fa-brands fa-square-facebook fa-xl" style="color: #000000;"></i>
        </a>
        <a href="https://www.tiktok.com/@tartuvoco?lang=en">
            <i class="fa-brands fa-tiktok fa-xl" style="color: #000000;"></i>
        </a>
        <a href="https://www.instagram.com/tartuvoco/?hl=en">
            <i class="fa-brands fa-instagram fa-xl" style="color: #000000;"></i>
        </a>
    </div>
    <div class="header-search">
        <input type="text" id="searchInput" placeholder="Otsi...">
        <button type="button" id="searchButton">
            <i class="fa-solid fa-search fa-lg" style="color: #000000;"></i>
        </button>
        <a id="siseneButton" class="sisene" href="/sisene">Sisene</a>
    </div>
    <script>
        document.getElementById("searchButton").addEventListener("click", function () {
            sendData();
        });

        document.getElementById("searchInput").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                sendData();
            }
        });

        function sendData() {
            var userInput = document.getElementById("searchInput").value.trim();
            if (userInput.length > 3) {
                sendDataToServer(userInput);
            } else {
                alert("Please enter at least 4 characters before searching.");
            }
        }

        function sendDataToServer(input) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/search", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        var response = JSON.parse(xhr.responseText);
                        if (response.success) {
                            var url = response.url;
                            var data = response.data; // Extract the data from the response
                            window.location.href = `${url}?data=${JSON.stringify(data)}`; // Pass data as query parameter
                        } else {
                            alert("Search failed. Please try again later.");
                        }
                    } else {
                        alert("Error: " + xhr.statusText);
                    }
                }
            };
            var data = JSON.stringify({ query: input });
            xhr.send(data);
        }
    </script>


</header>
<nav>
    <a href="/" class="nav-logo">
        <img style="height: 80px" src="/logos/voco-logo-04-3.png">

    </a>
    <div class="nav-links">
        <a style="color: #2980b9" href="artiklid">Artiklid</a>
        <a href="uudised">Uudised</a>
        <a href="foorum">Foorum</a>
        <a href="treeningud">Treeningud</a>
        <a href="galerii">Galerii</a>
        <a href="kontakt">Kontakt</a>

    </div>
</nav>
<section class="artiklid">
    <div class="section-nav">
        <div class="path">
            <p><a href="/">Avaleht</a> > <span>Artiklid</span></p>
        </div>
        <h1>Artiklid</h1>


        <% if (userRole === 2 || userRole === 3) { %>
        <section class="hold-create-article">
            <h2>Lisa uus artikkel</h2>

            <div class="new-article">
                <form id="createArticle" onsubmit="submitForm(event)">
                    <input type="text" name="newArticleHeader" id="newArticleHeader" placeholder="Uue artikli pealkiri">
                    <input type="hidden" id="summernoteContent" name="summernoteContent">
                    <button type="submit"><i class="fa-solid fa-plus fa-lg"></i></button>
                    <div class="error" id="error-message-container">
                        <!-- Error message will be dynamically inserted here -->
                    </div>
                </form>
            </div>



                <div id="summernote"></div>
                <script>
                    $('#summernote').summernote({
                        placeholder: 'Artikli sisu...',
                        tabsize: 2,
                        height: 200,
                        toolbar: [
                            ['style', ['style']],
                            ['font', ['bold', 'underline', 'clear']],
                            ['color', ['color']],
                            ['para', ['ul', 'ol', 'paragraph']],
                            ['table', ['table']],
                            ['insert', ['link', 'picture']],
                            ['view', ['help']]
                        ],
                        callbacks: {
                            onPaste: function (e) {
                                // Prevent the default paste behavior
                                e.preventDefault();

                                // Get the pasted content
                                var pastedContent = (e.originalEvent.clipboardData || window.clipboardData).getData('text/plain');

                                // Remove all HTML tags and extra spaces
                                pastedContent = pastedContent.replace(/<[^>]+>/g, ''); // Remove HTML tags
                                pastedContent = pastedContent.replace(/\s+/g, ' '); // Remove extra spaces

                                // Insert the plain text into the editor
                                document.execCommand('insertText', false, pastedContent.trim());
                            }
                        }
                    });
                </script>

        </section>
        <% } %>
        <section class="hold-filter">
            <button class="order-btn" id="orderButton" onclick="toggleOrder()">Vanimad <i class="fa-solid fa-arrow-down fa-sm"></i> </button>
            <select id="yearDropdown">
                <option value="" selected>Vali aasta</option>
            </select>
            <div class="filter-search">
                <input type="text" id="filterSearchInput" placeholder="Otsi artiklite seast...">
                <button type="button" onclick="deleteInput()">
                    <i class="fa-regular fa-circle-xmark fa-lg"></i>
                </button>
            </div>
        </section>

    </div>
    <div class="search-article">
    </div>
    <main id="articles" class="articles-content">
    </main>
</section>





<div class="mapBanner">
    <a href="https://www.google.com/maps?ll=58.349455,26.714113&amp;z=15&amp;t=m&amp;hl=en-US&amp;gl=EG&amp;mapclient=embed&amp;q=Kopli+1+50115+Tartu+Estonia" target="_blank" class="mapBanner_col" style="background-image: url('https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/map_1.jpg')">
        Kopli 1
    </a>
    <a href="https://www.google.com/maps/place/P%C3%B5llu+11,+50303+Tartu,+Estonia/@58.3994611,26.7119631,17.25z/data=!4m13!1m7!3m6!1s0x46eb36f49f59f7b1:0xc60a936ef314737f!2sP%C3%B5llu+11,+50303+Tartu,+Estonia" target="_blank" class="mapBanner_col" style="background-image: url('https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/map_2.jpg')">
        PÃµllu 11
    </a>
</div>

<footer class="footer">
    <div class="container container-footer">
        <div class="footer_content">
            <div class="footer_logoCol">
                <a href="https://liikumine.voco.ee/" class="footer_logo">
                    <img src="https://liikumine.voco.ee/wp-content/uploads/sites/11/2023/01/VOCO.svg"
                         alt="VOCO Liikumine" class="footer_logoImg">
                </a>
            </div>
            <div class="footer_mainCol">
                <div class="footer_grid">
                    <div class="footer_col">
                        <h3 class="footer_title">
                            Kontakt
                        </h3>
                        <div class="footer_text">
                            <p><a href="mailto:info@voco.ee">info@voco.ee</a></p>
                            <p>7 361 810</p>

                        </div>
                    </div>
                    <div class="footer_col">
                        <h3 class="footer_title">
                            VOCO
                        </h3>
                        <div class="footer_text">
                            <p>Kopli 1</p>
                            <p>Tartu 50115 Eesti</p>

                        </div>
                    </div>
                    <div class="footer_col">
                        <h3 class="footer_title">
                            Privaatsustingimused
                        </h3>
                        <div class="footer_text">
                            <p><a href="#">Andmekaitse</a></p>
                            <p><a href="#">KÃ¼psised</a></p>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="footer_bottom">
        Â© Tartu rakenduslik kolledÅ¾ 2024
    </div>
</footer>
</body>

<% if (userRole === 2 || userRole === 3) { %>
    <script>
        function submitForm(event) {
            event.preventDefault(); // Prevent default form submission

            // Get Summernote content
            var summernoteContent = $('#summernote').summernote('code');
            // Set Summernote content to the hidden input field
            document.getElementById('summernoteContent').value = summernoteContent;

            // Get session data from sessionStorage
            var sessionToken = sessionStorage.getItem('sessionToken');
            var userId = sessionStorage.getItem('userId');
            var email = sessionStorage.getItem('email');

            // Create an object to hold form data
            var formData = {
                newArticleHeader: document.getElementById('newArticleHeader').value,
                summernoteContent: summernoteContent,
                sessionToken: sessionToken,
                userId: userId,
                email: email
            };

            // Check if newArticleHeader or summernoteContent is empty
            if (!formData.newArticleHeader || !formData.summernoteContent) {
                console.error('New article header or summernote content is empty');
                document.getElementById('error-message-container').innerText = 'Uue artikli pealkiri vÃµi sisu ei tohi olla tÃ¼hi!';
                return;
            }

// Send form data to server
            fetch('/submit-article', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => {
                    if (!response.ok) {

                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        console.log('Data submitted successfully:', data);
                        alert('Uus artikkel lisatud!');
                        location.reload();
                        // Optionally, you can redirect the user or perform any other action upon successful submission
                    } else {
                        // Display error message if submission failed
                        console.error('Error submitting data:', data.message);
                        document.getElementById('error-message-container').innerText = data.message;
                    }
                })
                .catch(error => {
                    console.error('Error submitting data:', error);
                    // Display error message if submission failed
                    document.getElementById('error-message-container').innerText = 'Network error: ' + error.message;
                });

        }

</script>

<% } %>
<script>
    function filterArticlesByYear() {
        const selectedYear = document.getElementById('yearDropdown').value;

        const articlePreviews = document.querySelectorAll('.article-preview');

        articlePreviews.forEach(articlePreview => {
            const articleDateElement = articlePreview.querySelector('.article-date');
            if (selectedYear === "" || (articleDateElement && articleDateElement.textContent.includes(selectedYear))) {
                articlePreview.style.display = '';
            } else {
                articlePreview.style.display = 'none';
            }
        });
    }
    document.getElementById('yearDropdown').addEventListener('change', filterArticlesByYear);

</script>




<script>
    function searchArticles() {
        const searchInput = document.getElementById('filterSearchInput').value.trim().toLowerCase();
        const articlePreviews = document.querySelectorAll('.article-preview');

        articlePreviews.forEach(articlePreview => {
            const articleText = articlePreview.textContent.toLowerCase().trim();
            const h2Element = articlePreview.querySelector('h2');
            const summernoteContentElement = articlePreview.querySelector('.summernote-content');
            const authorElement = articlePreview.querySelector('.article-author');
            const articleDateElement = articlePreview.querySelector('.article-date');

            if (articleText.includes(searchInput) ||
                (h2Element && h2Element.textContent.toLowerCase().includes(searchInput)) ||
                (authorElement && authorElement.textContent.toLowerCase().includes(searchInput)) ||
                (articleDateElement && articleDateElement.textContent.toLowerCase().includes(searchInput)) ||
                (summernoteContentElement && summernoteContentElement.textContent.toLowerCase().includes(searchInput))) {
                articlePreview.style.display = '';
            } else {
                articlePreview.style.display = 'none';
            }
        });
    }

    function deleteInput() {
        document.getElementById('filterSearchInput').value = '';
        searchArticles(); // Call searchArticles to update display after clearing input
    }

    document.getElementById('filterSearchInput').addEventListener('input', searchArticles);
</script>


<script>

    let isOldest = true;

    function toggleOrder() {
        if (isOldest) {
            orderArticlesByLatest();
            document.getElementById('orderButton').innerHTML = 'Uusimad <i class="fa-solid fa-arrow-up fa-sm"></i>';
        } else {
            orderArticlesByOldest();
            document.getElementById('orderButton').innerHTML = 'Vanimad <i class="fa-solid fa-arrow-down fa-sm"></i>';
        }
        isOldest = !isOldest;
    }

    function orderArticlesByLatest() {
        const articles = Array.from(document.querySelectorAll('.article-preview'));
        const articlesContainer = document.getElementById('articles');

        articles.reverse(); // Reverse the order of articles

        articles.forEach(article => articlesContainer.appendChild(article));

        if (document.getElementById('orderButton').innerText = 'Vanimad') {
            document.getElementById('orderButton').innerText = 'Uusimad';
        } else {
            document.getElementById('orderButton').innerText = 'Vanimad';
        }
    }

    function orderArticlesByOldest() {
        const articles = Array.from(document.querySelectorAll('.article-preview'));
        const articlesContainer = document.getElementById('articles');

        articles.reverse(); // Reverse the order of articles

        articles.forEach(article => articlesContainer.appendChild(article));

        if (document.getElementById('orderButton').innerText = 'Uusimad') {
            document.getElementById('orderButton').innerText = 'Vanimad';
        } else {
            document.getElementById('orderButton').innerText = 'Uusimad';
        }
    }

</script>


<script>
    // Function to show skeleton loader for articles
    function showArticlesSkeletonLoader() {
        const articlesContainer = document.getElementById('articles');
        articlesContainer.innerHTML = ''; // Clear existing content

        // Create skeleton elements for articles
        for (let i = 0; i < 4; i++) {
            const articleSkeleton = document.createElement('div');
            articleSkeleton.classList.add('article-skeleton');

            const authorSkeleton = document.createElement('div');
            authorSkeleton.classList.add('author-skeleton');

            const dateSkeleton = document.createElement('div');
            dateSkeleton.classList.add('date-skeleton');

            const headerSkeleton = document.createElement('div');
            headerSkeleton.classList.add('header-skeleton');

            const contentSkeleton = document.createElement('div');
            contentSkeleton.classList.add('content-skeleton');

            articleSkeleton.appendChild(authorSkeleton);
            articleSkeleton.appendChild(dateSkeleton);
            articleSkeleton.appendChild(headerSkeleton);
            articleSkeleton.appendChild(contentSkeleton);

            articlesContainer.appendChild(articleSkeleton);
        }
    }

    // Call function to show skeleton loader for articles
    showArticlesSkeletonLoader();

    // Function to fetch articles from the server
    function fetchArticles() {
        fetch('/get-articles')
            .then(response => response.json())
            .then(data => {
                // Clear existing articles
                document.getElementById('articles').innerHTML = '';

                // Get the dropdown element
                const yearDropdown = document.getElementById('yearDropdown');

                // Array to hold unique years
                const uniqueYears = [];

                // Loop through fetched articles and append them to the main element
                data.forEach(article => {
                    const articleDiv = document.createElement('div');
                    articleDiv.classList.add('article-preview');
                    articleDiv.innerHTML = `
                <p class="article-author">Autor: ${article.articleAuthor}</p>
                <p class="article-date">${article.articleDate}</p>
                <h2>${article.articleHeader}</h2>
                <div>${article.summernoteContent}</div>
                <a href="${article.url}">Loe rohkem â†’</a>
            `;

                    // Find the first image inside the div
                    const imgElements = articleDiv.querySelectorAll('img');

                    // Loop through imgElements and set width to "200px"
                    imgElements.forEach(imgElement => {
                        imgElement.style.width ='200px'
                    });

                    // If an image is found, set it as the background of the articleDiv
                    const firstImgElement = imgElements[0]; // Assuming we want to set only the first image as background
                    if (firstImgElement) {
                        articleDiv.style.backgroundImage = `url('${firstImgElement.src}')`;
                        articleDiv.style.backgroundSize = 'cover';
                        articleDiv.style.backgroundPosition = 'center';
                        articleDiv.style.backgroundRepeat = 'no-repeat';
                        articleDiv.style.backgroundBlendMode = 'overlay';
                    }

                    document.getElementById('articles').appendChild(articleDiv);

                    // Extract year from article date (assuming articleDate format is 'DD-MM-YYYY')
                    const year = article.articleDate.split('-')[2];

                    // Add year to uniqueYears if it's not already there
                    if (!uniqueYears.includes(year)) {
                        uniqueYears.push(year);
                    }
                });

                // Populate the dropdown with unique years
                uniqueYears.forEach(year => {
                    const option = document.createElement('option');
                    option.value = year;
                    option.textContent = year;
                    yearDropdown.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error fetching articles:', error);
                // Handle errors here
            });
    }

    // Call fetchArticles function when the page loads
    window.onload = fetchArticles;

</script>

<script>
    // checkLogin.js

    document.addEventListener("DOMContentLoaded", function () {
        const siseneButton = document.getElementById('siseneButton');

        // Check if the user is logged in by making a request to the server
        fetch('/test')
            .then(response => response.json())
            .then(data => {
                const isLoggedIn = data.session && data.session.user !== undefined && data.session.user !== null;

                // Update the button text based on the user's login status
                siseneButton.innerText = isLoggedIn ? 'VÃ¤lju' : 'Sisene';

                // Add a click event listener to the button
                siseneButton.addEventListener('click', function () {
                    if (isLoggedIn) {
                        // If logged in, make a request to the server to log out
                        fetch('/logout')
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // If logout successful, reload the page to reflect the changes
                                    location.reload();
                                    // delete all sessionStorage
                                    sessionStorage.clear();
                                } else {
                                    console.error('Error logging out:', data.message);
                                }
                            })
                            .catch(error => console.error('Error logging out:', error));
                    } else {
                        // Handle the logic for navigating to the login page or any other actions
                        // Redirect to the login page, for example:
                        sessionStorage.clear();
                        window.location.href = '/sisene';
                    }
                });
            })
            .catch(error => console.error('Error checking login status:', error));
    });

</script>

</html>
